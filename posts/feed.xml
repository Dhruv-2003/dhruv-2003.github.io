<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>Posts</title>
	<subtitle>My recent posts and articles on various topics.</subtitle>
	<link href="https://0xdhruv.me/posts/feed.xml" rel="self" type="application/atom+xml"/>
    <link href="https://0xdhruv.me/posts/"/>
	<updated>2025-09-09T00:00:00+00:00</updated>
	<id>https://0xdhruv.me/posts/feed.xml</id>
	<entry xml:lang="en">
		<title>my experience through the wintermute alpha challenge 2025</title>
		<published>2025-09-09T00:00:00+00:00</published>
		<updated>2025-09-09T00:00:00+00:00</updated>
		<link href="https://0xdhruv.me/posts/wintermute-alpha-challenge-25/" type="text/html"/>
		<id>https://0xdhruv.me/posts/wintermute-alpha-challenge-25/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;&#x2F;wintermute-challenge-25&#x2F;leaderboard.png&quot; alt=&quot;Wintermute alpha challenge 25 leaderboard&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;intro&quot;&gt;intro&lt;a class=&quot;zola-anchor&quot; href=&quot;#intro&quot; aria-label=&quot;Anchor link for: intro&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;this isn‚Äôt a polished technical writeup of every exploit, wintermute already publishes great case studies for that. instead, this is my own devlog-style account of how i approached the alpha challenge 2025: the tools i used, the way i thought through problems, where i got stuck, and what i learned along the way.&lt;&#x2F;p&gt;
&lt;p&gt;i first heard about the challenge from someone who competed last year and later joined wintermute, which got me curious. i expected more research-analyst style questions (finding data, doing protocol-level case studies, etc.), but it turned out to be much more hands-on: debugging exploits, replaying attacks, decompiling bytecode, liquidations, and even a pvp liquidity game.&lt;&#x2F;p&gt;
&lt;p&gt;this mix of research + execution hooked me instantly. i‚Äôm not a security researcher by background, but i like solving puzzles. this challenge became a sprint of learning defi internals under pressure.&lt;&#x2F;p&gt;
&lt;p&gt;if you want the solutions, check this &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Frodan&#x2F;wintermute-alpha-2025-writeups&quot;&gt;case studies writeup&lt;&#x2F;a&gt; by @frodan. if you want to see how someone like me worked through them, right or wrong, then read on.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tools-i-used&quot;&gt;tools i used&lt;a class=&quot;zola-anchor&quot; href=&quot;#tools-i-used&quot; aria-label=&quot;Anchor link for: tools-i-used&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;before diving into the case studies, here‚Äôs what i leaned on the most throughout the challenge:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;foundry (cast &amp;amp; forge)&lt;&#x2F;strong&gt; ‚Üí my main swiss-army knife for onchain lookups, scripting transactions, and replaying attacks on forked mainnet.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;etherscan decompiler&lt;&#x2F;strong&gt; ‚Üí surprisingly useful for challenges without verified source. being able to peek into opcodes and constants gave me just enough context to patch things.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;dune dashboards &amp;amp; explorers&lt;&#x2F;strong&gt; ‚Üí for quick market &#x2F; protocol context. sometimes just scanning the right chart gave me clues.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;gpt 5&lt;&#x2F;strong&gt; ‚Üí not for exact solutions (it was usually clueless about solving these puzzles), but for brainstorming, research, confirming syntax, and occasionally pointing me to the right docs.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;scratch notes + manual trial &amp;amp; error&lt;&#x2F;strong&gt; ‚Üí honestly, a lot of this challenge came down to debugging small mistakes: wrong address, proxy vs implementation confusion, or under-estimating liquidity.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;having these at hand gave me speed, even if i didn‚Äôt know the protocol or exploit beforehand.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;obstacle-race&quot;&gt;obstacle race&lt;a class=&quot;zola-anchor&quot; href=&quot;#obstacle-race&quot; aria-label=&quot;Anchor link for: obstacle-race&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;this was the first real puzzle i tackled. the task was to ‚Äúmodify the bytecode and test in forked env.‚Äù at first i didn‚Äôt get it, how do you even change deployed bytecode? but then it clicked: the goal was to frontrun the attacker and deploy our own patched contract to rescue funds.&lt;&#x2F;p&gt;
&lt;p&gt;i had never played with raw evm bytecode before. i used etherscan‚Äôs decompiler first, then dedaub decompiler to reverse the contract and noticed every function checked against a double-hashed &lt;code&gt;tx.origin&lt;&#x2F;code&gt;. the hash constants looked incomplete at first, until i realized they were split across two push opcodes: &lt;code&gt;32 bytes ‚Üí 1 + 31 bytes&lt;&#x2F;code&gt; which was the tricky part in this challenge&lt;&#x2F;p&gt;
&lt;p&gt;after a few failed attempts, i patched the constants with my own address, redeployed, and replayed the attack successfully.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;takeaway:&lt;&#x2F;strong&gt; this was my crash course in how far you can go with just bytecode + opcodes. i learned that even if the source isn‚Äôt verified, you still have options.&lt;&#x2F;p&gt;
&lt;p&gt;the same concept applied to the ‚Äúrabbithole‚Äù challenge as well&lt;&#x2F;p&gt;
&lt;h2 id=&quot;before-the-storm&quot;&gt;before the storm&lt;a class=&quot;zola-anchor&quot; href=&quot;#before-the-storm&quot; aria-label=&quot;Anchor link for: before-the-storm&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;this one revolved around liquidating a position in llamalend after the uwu lend hack. at first, i didn‚Äôt know llamalend‚Äôs flow, and the address provided in the challenge didn‚Äôt map clearly in my head.&lt;&#x2F;p&gt;
&lt;p&gt;so my first step was just researching about the protocol: what llamalend is (a curve sub-product), how positions are tracked, and what exactly needed to be liquidated. once i had that clarity, the path became clear: i needed a flashloan to get curvUSD, convert, liquidate the position, and walk away with CURV.&lt;&#x2F;p&gt;
&lt;p&gt;the real pain here wasn‚Äôt the logic, it was juggling liquidity and failed attempts. i first tried flashloaning CURV directly from curv‚Äôs flashlender (wrong, not deployed at that block). then i switched to balancer for flashloan and swaps &lt;code&gt;USDC ‚Üí curvUSD ‚Üí CURV&lt;&#x2F;code&gt;. the amounts were large enough that full liquidation wasn‚Äôt always possible, so i had to settle for partials. still, i managed to bag ~95k CURV.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;takeaway:&lt;&#x2F;strong&gt; working across protocols isn‚Äôt just ‚Äúwrite contract and done.‚Äù the actual liquidity available at block height can break the flow.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;it-s-oiler&quot;&gt;it‚Äôs oiler&lt;a class=&quot;zola-anchor&quot; href=&quot;#it-s-oiler&quot; aria-label=&quot;Anchor link for: it-s-oiler&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;the name gave me a laugh once i realized it was ‚Äúeuler‚Äù in a scottish accent. i thought this would be simpler than others, but it ended up eating a ton of time.&lt;&#x2F;p&gt;
&lt;p&gt;the challenge gave me a huge eWETH collateral position. my job: extract as much value as possible. at first, i thought i‚Äôd just borrow against it. but in reality, it turned into a search problem, finding which markets still had liquidity worth borrowing as most of them were drained after the hack.&lt;&#x2F;p&gt;
&lt;p&gt;i wrote a script to scan all euler markets, filter out useless tokens, and find pools with real balances. then came the swapping part. uniswap v3 alone wasn‚Äôt enough, so i had to piece together multi-hop routes on v3 across different fee tiers, plus sushi&#x2F;pancake.&lt;&#x2F;p&gt;
&lt;p&gt;i ended up splitting my collateral across multiple contracts to get around isolated borrowing restrictions. in total: 27 txs, ~3.8m recovered. not the most optimized work i could‚Äôve gone for, but it got the job done.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;takeaway:&lt;&#x2F;strong&gt; i learned:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;scanning&#x2F;token filtering via scripts is critical, saves hours of manual trial.&lt;&#x2F;li&gt;
&lt;li&gt;sometimes the ‚Äúbrute force‚Äù approach (multiple contracts, many txs) is fine if you‚Äôre under time pressure.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;pvp-competition&quot;&gt;pvp competition&lt;a class=&quot;zola-anchor&quot; href=&quot;#pvp-competition&quot; aria-label=&quot;Anchor link for: pvp-competition&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;this was unlike the others: not a puzzle, but a live strategy game. we had custom tokens with univ3 pools at different fee tiers, and wash trading was driving volume. the way to win was provide liquidity in the right ranges and farm fees or do FCFS challenge.&lt;&#x2F;p&gt;
&lt;p&gt;i debated writing a script but with only 3‚Äì4 days left, i went manual. i inspected pools, spotted low-liquidity but decent-volume ones (like &lt;code&gt;acUSDT&#x2F;acAlpha 0.05%&lt;&#x2F;code&gt;), and dropped liquidity there. i also tested the bigger &lt;code&gt;0.3%&lt;&#x2F;code&gt; pool.&lt;&#x2F;p&gt;
&lt;p&gt;my routine became: monitor ranges, swap between acUSDT ‚Üî acAlpha, reposition liquidity, and try not to bleed too much in fees myself. it was messy, sometimes i got pushed out of range, sometimes i lost on swaps, but i did end up earning a fair chunk of fees before losing it all at the end again üòÖ&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;takeaway:&lt;&#x2F;strong&gt; unlike the other challenges, this was about real-time decision making. i learned how hard active liquidity management is in practice, and how quickly fees you pay can eat into gains.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other-highlights&quot;&gt;other highlights&lt;a class=&quot;zola-anchor&quot; href=&quot;#other-highlights&quot; aria-label=&quot;Anchor link for: other-highlights&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;dark amms&lt;&#x2F;strong&gt; ‚Üí this was the first written case study i touched, but i didn‚Äôt finish during the challenge window. i learned that ‚Äúdark‚Äù here didn‚Äôt mean privacy but hidden pricing logic: market maker operated contracts updated every block, no public frontends. the concept fascinated me because it‚Äôs so well-suited to solana‚Äôs low-latency blockspace, and i kept thinking about how something similar might work on L2s with flashblocks. even unfinished, it sparked new ideas for me.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;what if&lt;&#x2F;strong&gt; ‚Üí this was the challenge i sunk the most time into without a neat solution. the task was open-ended: find skewed pools, rescue as much stETH as possible. i mapped the main dexes (curve, balancer, uniswap), spotted imbalances, and drafted scripts for cross-dex swaps. but execution was messy - low rates, failed swaps, partial arb opportunities. with just a few hours left, i chose to move on.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;too old for optimising&lt;&#x2F;strong&gt; ‚Üí this one clicked late but fast. i dug into yearn‚Äôs yUSDC vaults, realized rebalancing could push funds(~700k USDC) into aave v1, and then leveraged my existing usdt collateral to top up the usdc pool. it wasn‚Äôt the cleanest trick, but it worked and got me across the line.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;final-thoughts&quot;&gt;final thoughts&lt;a class=&quot;zola-anchor&quot; href=&quot;#final-thoughts&quot; aria-label=&quot;Anchor link for: final-thoughts&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;across all the challenges, i made plenty of mistakes, using wrong addresses, mixing up proxies, chasing liquidity in the wrong pools. but then I slowed down, did debugging, and figured things out.&lt;&#x2F;p&gt;
&lt;p&gt;the biggest things i took away from this sprint:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;tools &amp;gt; knowledge&lt;&#x2F;strong&gt; ‚Üí knowing how to use cast, decompilers, explorers mattered more than memorizing protocol docs. with ai tools like chatgpt and claude code, the process becomes simpler and can be sped up.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;process matters&lt;&#x2F;strong&gt; ‚Üí mapping a protocol before touching contracts saved me from wild goose chases.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;curiosity wins&lt;&#x2F;strong&gt; ‚Üí not being a ‚Äúsecurity researcher‚Äù didn‚Äôt matter. being willing to try, fail, and try again mattered more.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;i loved participating in alpha challenge 2025. it pushed me into bytecode, flashloans, liquidations, and liquidity management in ways i hadn‚Äôt done before. more than anything, it showed me how much i enjoy this type of puzzle-solving. i ended up ranking 17th among 1000+ participants in the leaderboard with a score of 500, not bad ig. i‚Äôll definitely keep joining these competitions and keep learning in public.&lt;&#x2F;p&gt;
&lt;p&gt;thanks to wintermute for organising, and to everyone who shared their own approaches.&lt;&#x2F;p&gt;
&lt;p&gt;connect with me on &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;0xdhruva&quot;&gt;twitter&lt;&#x2F;a&gt; if you want to chat more about defi, smart contracts, or puzzles like these.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Climate‚ÄëResilient Loans: A Simple Spin on Multiverse Finance</title>
		<published>2025-08-22T00:00:00+00:00</published>
		<updated>2025-08-22T00:00:00+00:00</updated>
		<link href="https://0xdhruv.me/posts/climate-resillient-credit/" type="text/html"/>
		<id>https://0xdhruv.me/posts/climate-resillient-credit/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;&#x2F;multiverse-finance&#x2F;cover.png&quot; alt=&quot;Multiverse Finance Cover&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;a class=&quot;zola-anchor&quot; href=&quot;#introduction&quot; aria-label=&quot;Anchor link for: introduction&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;p&gt;Imagine a loan that adapts to the weather. That‚Äôs the simple idea I‚Äôm exploring today using weather‚Äëconditioned tokens as collateral to give small farmers a financial buffer when they need it most. Inspired by the &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;www.paradigm.xyz&#x2F;2025&#x2F;05&#x2F;multiverse-finance&quot;&gt;Multiverse Finance&lt;&#x2F;a&gt; concept by Dave White at Paradigm, this is a use‚Äëcase I specced out while applying for the Paradigm Fellowship. Multiverse Finance lets you create verses (parallel universes) that only have value if specific conditions are met, conditional money that disappears if the condition fails. Let me show you how I think it might work and why it could actually help farmers instead of just creating another betting market.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;the-challenge&quot;&gt;The Challenge&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-challenge&quot; aria-label=&quot;Anchor link for: the-challenge&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;p&gt;For smallholder farmers, income isn‚Äôt just seasonal ‚Äî it‚Äôs unpredictable. One year‚Äôs monsoon can mean a good harvest; a slightly delayed or brief rain can spell disaster.&lt;&#x2F;p&gt;
&lt;p&gt;The downside here is much worse than the upside is good. A bad weather year can wipe out a farmer&#x27;s entire income and push them into debt, while a good year might only provide modest gains above normal. Traditional loans make this asymmetry worse by demanding repayment regardless of outcomes.&lt;&#x2F;p&gt;
&lt;p&gt;So what if the credit system itself could be flexible, responsive to the climate instead of rigid ?&lt;&#x2F;p&gt;
&lt;h1 id=&quot;the-idea&quot;&gt;The Idea&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-idea&quot; aria-label=&quot;Anchor link for: the-idea&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;p&gt;Here‚Äôs the core concept of Weather-Conditioned Collateral, instead of ordinary collateral, farmers enter a ‚Äúverse‚Äù tied to weather outcomes. For instance:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;LowRain Verse&lt;&#x2F;strong&gt; - where LowRainUSD tokens are worth 1$ and verse survives only if total rainfall in the season is below, say, 20‚ÄØcm.&lt;&#x2F;p&gt;
&lt;p&gt;Farmer uses these tokens as collateral to borrow from other participants in the same verse. Everyone in this verse is betting on the same weather outcome. If rain is scarce (bad harvest), the verse survives, both collateral and debt remain valid, giving the farmer liquidity when they need it most. If rain is abundant (good harvest), the entire verse disappears, collateral, debt, everything vanishes.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;how-it-plays-out&quot;&gt;How It Plays Out&lt;a class=&quot;zola-anchor&quot; href=&quot;#how-it-plays-out&quot; aria-label=&quot;Anchor link for: how-it-plays-out&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;p&gt;Inside a verse, tokens behave in a very particular way: &lt;strong&gt;1 LowRainUSD = $1 only if the verse survives&lt;&#x2F;strong&gt;. That makes the setup look speculative at first glance, the farmer is essentially declaring &lt;em&gt;‚ÄúI think drought is a real possibility‚Äù&lt;&#x2F;em&gt; when they mint these tokens.&lt;&#x2F;p&gt;
&lt;p&gt;But this isn&#x27;t the farmer betting against themselves. Think of it as insurance, that pays out exactly when drought hurts them most. This flips the traditional risk model: instead of being vulnerable when weather goes wrong, farmers are protected when they need it most.&lt;&#x2F;p&gt;
&lt;p&gt;Let‚Äôs walk through two clear outcomes:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Worst‚ÄëCase (Low Rainfall):&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;Drought Happens, so the verse survives.&lt;&#x2F;li&gt;
&lt;li&gt;Collateral (LowRainUSD) remains valid, as does the borrowed amount.&lt;&#x2F;li&gt;
&lt;li&gt;The farmer still holds liquidity despite a poor harvest.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Best‚ÄëCase (High Rainfall):&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;Verse disappears&lt;&#x2F;li&gt;
&lt;li&gt;Neither collateral nor loan hold.&lt;&#x2F;li&gt;
&lt;li&gt;The farmer loses just the initial collateral but reaps a full harvest.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h1 id=&quot;why-it-matters&quot;&gt;Why It matters&lt;a class=&quot;zola-anchor&quot; href=&quot;#why-it-matters&quot; aria-label=&quot;Anchor link for: why-it-matters&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;p&gt;This approach offers several advantages:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;It removes liquidation risk during bad harvests, loans vanish with collateral if the verse doesn‚Äôt hold.&lt;&#x2F;li&gt;
&lt;li&gt;It shifts credit from being rigid to being &lt;strong&gt;belief-driven&lt;&#x2F;strong&gt;: farmers borrow based on their informed view of the season.&lt;&#x2F;li&gt;
&lt;li&gt;For lenders, the logic is just as clear: they only lend when they think a verse is likely to survive, and they accept that in ‚Äúbad worlds‚Äù their lent amount disappears&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;closing-notes-future-work&quot;&gt;Closing notes &amp;amp; Future Work&lt;a class=&quot;zola-anchor&quot; href=&quot;#closing-notes-future-work&quot; aria-label=&quot;Anchor link for: closing-notes-future-work&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;p&gt;This is just one example of how Multiverse Finance could stretch beyond speculative trading into real-world applications. I&#x27;m excited about exploring how crypto primitives might unlock resilience for communities most exposed to risk.&lt;&#x2F;p&gt;
&lt;p&gt;There are several design challenges to work through, like what tokens farmers should borrow against their weather collateral, how to price these tokens before weather outcomes are known, and making the mechanics simple enough for real-world use.&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re working on similar problems, or have thoughts on making this more practical, I&#x27;d love to hear from you.&lt;&#x2F;p&gt;
&lt;p&gt;connect with me on &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;0xdhruva&quot;&gt;twitter&lt;&#x2F;a&gt; if you want to chat more about defi, smart contracts, or puzzles like these.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;acknowledgments&quot;&gt;Acknowledgments&lt;a class=&quot;zola-anchor&quot; href=&quot;#acknowledgments&quot; aria-label=&quot;Anchor link for: acknowledgments&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Thanks to &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;x.com&#x2F;Vladfdp&quot;&gt;Vlad&lt;&#x2F;a&gt; and &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;x.com&#x2F;timjrobinson&quot;&gt;Tim Robinson&lt;&#x2F;a&gt; for their feedback and insights on this post.&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>